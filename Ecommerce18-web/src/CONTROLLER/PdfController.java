package CONTROLLER;

import MODEL.CartModel;
import com.itextpdf.text.*;
import com.itextpdf.text.Font;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import java.awt.*;
import java.io.FileOutputStream;
import java.util.Date;

public class PdfController {

    private static String FILE = "Invoice.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("Invoice");
        document.addSubject("Ec-18");
        document.addAuthor("Andrea Capone");
        document.addCreator("Giuseppe Bifulco");
    }

    private static void addBody(Document document, String Nome, String Cognome, String Email, String Address)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("Your Invoice", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Intestatario Fattura: " + Nome + ", "+Cognome +"\n"+ "DATA: " + new Date() + "\nEmail: " + Email +
                        "\nIndirizzo: " + Address , smallBold));
        addEmptyLine(preface, 8);
        document.add(preface);

    }

    private static void createTable(Document document, java.util.List<CartModel> Cart, Double totale) throws DocumentException {


        PdfPTable table = new PdfPTable(3);

        PdfPCell c1 = new PdfPCell(new Phrase("Nome"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Quantità"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Prezzo unitario"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);

        for (CartModel x : Cart){
            table.addCell(x.getAssociatedProduct().getName());
            table.addCell(""+ x.getSelectedQuantity());
            table.addCell("" + x.getAssociatedProduct().getPrice());
        }
        document.add(table);

        Paragraph preface = new Paragraph();
        addEmptyLine(preface, 3);

        preface.add(new Paragraph("Totale: " + totale+" €", catFont));
        document.add(preface);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }

    public static String getFILE() {
        return FILE;
    }

    public void crea(String nome, String cognome, String email, String address, java.util.List<CartModel> Cart, Double totale) {
        try {

            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addMetaData(document);
            addBody(document,nome,cognome,email,address);
            createTable(document,Cart,totale);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}